name: Simple CI/CD

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: Test # TODO: Do NOT forget to create Test environment

    env:
      PORT: ${{ vars.PORT }}
      NODE_ENV: ${{ vars.NODE_ENV }}
      REDIS_URL: ${{ vars.REDIS_URL }}
      REDIS_PORT: ${{ vars.REDIS_PORT }}
      REDIS_PASSWORD: ${{ vars.REDIS_PASSWORD }}
      DATABASE_USER: ${{ vars.DATABASE_USER }}
      DATABASE_NAME: ${{ vars.DATABASE_NAME }}
      DATABASE_URL: ${{ vars.DATABASE_URL }}
      DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          echo "Host github.com\n IPQoS 0x00" >> ~/.ssh/config
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy over SSH
        run: |
          ssh -o ServerAliveInterval=60 -p ${{secrets.SSH_PORT}} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -x
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ${{secrets.PROJECT_PATH}}
            git pull
            npm ci
            npm run build
            pm2 restart ${{secrets.PROJECT_NAME}}
          EOF
